<div class="product-page ">
  <div class="product-images left">
    <div class="product-featured-image">
      <a href="{{ product.featured_image.src | product_img_url: 'orginal' }}">
        <img src="{{ product.featured_image.src | product_img_url: 'grande' }}" alt="{{ product.featured_image.alt | escape }}" />
      </a>
    </div>
    {% for image in product.images | offset:1 %}
    <div class="product-img left {% cycle ' ', ' ', ' ', 'last' %}">
      <a href="{{ image.src | product_img_url: 'orginal' }}">
        <img src="{{ image.src | product_img_url: 'small' }}" alt="{{ image.alt | escape }}" />
      </a>
      {% endfor %}
    </div>
  </div>
  <div class="product-details left">
    <h2 class="product-header">{{ product.title }}</h2>
    <div class="product-desc rte">{{ product.description }}</div>
    <div class="price-field"></div>
    <form class="product-form" action="/cart/add" method="post">
      <div class="product-variants">
        <select id="product-select" name="id">
          {% for variant in product.variants %}
          <option value="{{ variant.id }}">
            {{ variant.title }} - {{ variant.price | money }}
          </option>
          {% endfor %}
        </select>
      </div>
      <input type="submit" name="add" value="Purchase" class="btn">
    </form>
  </div>
</div>

<script type="text/javascript">
  //<![CDATA[
    var selectCallback = function(variant, selector) {
      if (variant && variant.available == true) {
        // selected a valid variant
        jQuery('.purchase').removeClass('disabled').removeAttr('disabled'); // remove unavailable class from add-to-cart button, and re-enable button
        jQuery('.price-field').html(Shopify.formatMoney(variant.price, "{{ shop.money_with_curreny_format }}")); // update price field
      } else {
        // variant doesn't exist
        jQuery('.purchase').addClass('disabled').attr('disabled', 'disabled'); // set add-to-cart button to unavailable class and disable button
        var message = variant ? "Sold Out" : "Unavailable";
        jQuery('.price-field').text(message); // update price-field message
      }
    };

    // initialize multi selector for product
    jQuery(function() {
      new Shopify.OptionSelectors("product-select", { product: {{ product | json }}, onVariantSelected: selectCallback });
      {% if product.option.size == 1 %}
      jQuery('.selector-wrapper').prepend("<label for='product-select-option-0'>{{ product.options.first }}</label>");
      {% endif %}
    });
  // ] ]>
</script>
